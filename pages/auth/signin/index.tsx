// NEXT REACT
import Head from "next/head";
import { useRouter } from "next/router";
import { SyntheticEvent, useEffect, useState } from "react";

// DEPENDENCY (PACKAGES, LIBS, INTERFACES, TYPES)
import { signIn, useSession } from "next-auth/react";
import Image from "next/image";
import Swal from "sweetalert2";
import { EyeIcon, EyeSlashIcon } from "@heroicons/react/24/outline";

interface ISignInCredentials {
	email?: string;
	password?: string;
}

export default function SignIn() {
	// DEPENDENCIES FUNCTIONS
	const router = useRouter();
	const { data: session, status } = useSession();

	//STATE
	const [signInCredentials, setSignInCredentials] =
		useState<ISignInCredentials>({
			email: "",
			password: "",
		});
	const [passwordState, setPasswordState] = useState(false);

	// CHECKING SESSION
	useEffect(() => {
		if (status === "authenticated") router.replace("/");
	}, [status]);

	// FUNCTIONS
	async function handleSignIn(e: SyntheticEvent) {
		e.preventDefault();
		console.log(signInCredentials);
		try {
			const res = await signIn("credentials", {
				redirect: false,
				email: signInCredentials.email,
				password: signInCredentials.password,
			});
			if (res?.error?.includes("email")) {
				Swal.fire({
					title: "Email Pengguna Salah",
					confirmButtonText: "OK",
					confirmButtonColor: "#60a5fa",
					icon: "warning",
				});
			} else if (res?.error?.includes("password")) {
				Swal.fire({
					title: "Password Pengguna Salah",
					confirmButtonText: "OK",
					confirmButtonColor: "#60a5fa",
					icon: "warning",
				});
			}
			// await router.replace("/");
			console.log(res);
		} catch (error) {
			console.log(error);
			alert(error);
		}
	}

	async function handleShowPassword(state: boolean) {
		setPasswordState(state);
	}

	return (
		<>
			<Head>
				<title>GEMADISPOSISI - Sign In</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="relative flex justify-center items-center w-full min-h-screen">
				<Image
					src="/img/bg-kantor.jpg"
					alt="bg-kantor"
					fill
					className="absolute z-0"
				/>
				<form
					onSubmit={handleSignIn}
					className="relative z-[1] flex flex-col gap-2 max-w-md w-5/6 p-12 rounded-3xl text-gray-200 bg-gradient-to-t from-gray-50/40 to-gray-50/0 backdrop-blur-md"
				>
					<div className="flex flex-col gap-2 w-fit mx-auto">
						<img
							src="https://lskgemapedekabe.com/wp-content/uploads/2019/08/pdkb-e1566140008599.png"
							alt="logo_gemapedekabe"
							className="w-40 bg-gray-200 rounded-full"
						/>
						<h2 className="text-center text-4xl font-bol">Sign In</h2>
					</div>
					{/* USERNAME */}
					<div className="flex flex-col">
						<label>Username :</label>
						<input
							type="text"
							required
							placeholder=". . ."
							className="outline-none p-3 text-gray-800 bg-gray-200 rounded-md "
							onChange={(e) =>
								setSignInCredentials({
									...signInCredentials,
									email: e.target.value,
								})
							}
						/>
					</div>
					{/* PASSWORD */}
					<div className="flex flex-col">
						<label>Password :</label>
						<div className="flex gap-2 rounded-md bg-gray-200">
							<input
								type={passwordState ? "text" : "password"}
								required
								placeholder=". . ."
								className="w-full outline-none p-3 bg-gray-200 rounded-md text-gray-800"
								// className="outline-none p-3 bg-gray-600 rounded-md placeholder:text-gray-200"
								onChange={(e) =>
									setSignInCredentials({
										...signInCredentials,
										password: e.target.value,
									})
								}
							/>
							{passwordState ? (
								<EyeSlashIcon
									className="mr-3 w-10 cursor-pointer text-gray-800"
									onClick={() => handleShowPassword(false)}
								/>
							) : (
								<EyeIcon
									className="mr-3 w-10 cursor-pointer text-gray-800"
									onClick={() => handleShowPassword(true)}
								/>
							)}
						</div>
					</div>
					{/* BUTTON */}
					<button
						type="submit"
						className="p-3 rounded-md font-semibold text-gray-200 bg-gray-800 transition-all duration-150 hover:bg-gray-900 hover:text-gray-400"
					>
						Sign In
					</button>
					{/* <div className="text-sm text-center">
						<Link
							href={"/auth/signup"}
							className="font-semibold hover:font-bold hover:underline no-underline"
						>
							Sign Up
						</Link>{" "}
						untuk membuat akun pengguna baru
					</div> */}
				</form>
			</main>
		</>
	);
}
