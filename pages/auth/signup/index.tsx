//NEXT REACT
import Head from "next/head";
import { useRouter } from "next/router";
import { SyntheticEvent, useEffect, useState } from "react";

//D
import { useSession } from "next-auth/react";
import axios from "axios";
import Swal from "sweetalert2";
import Image from "next/image";
import { EyeIcon, EyeSlashIcon } from "@heroicons/react/24/outline";

interface ISignUpCredentials {
	email?: string;
	password?: string;
	name?: string;
	position?: string;
	role?: string;
}

export default function SignUp() {
	// DEPENDENCIES FUNCTIONS
	const router = useRouter();
	const { status } = useSession();

	// STATE
	const [passwordState, setPasswordState] = useState(false);
	const [passwordConfirmState, setPasswordConfirmState] = useState(false);
	const [passwordConfirm, setPasswordConfirm] = useState("");
	const [signUpCredentials, setSignUpCredentials] =
		useState<ISignUpCredentials>({
			email: "",
			password: "",
			name: "",
			position: "",
			role: "USER",
		});

	// CHECKING SESSION
	useEffect(() => {
		if (status === "authenticated") router.replace("/");
	}, [status]);

	async function handleSignUp(e: SyntheticEvent): Promise<void> {
		e.preventDefault();
		try {
			if (signUpCredentials.password !== passwordConfirm) {
				await Swal.fire({
					title: "Password Tidak Sama",
					icon: "warning",
					color: "#111827",
					confirmButtonColor: "#60a5fa",
				});
			} else {
				await Swal.fire({
					title: "Buat Akun?",
					icon: "question",
					showCancelButton: true,
					confirmButtonColor: "#60a5fa",
					cancelButtonColor: "#f87171",
					confirmButtonText: "Ya",
					cancelButtonText: "Batal",
				}).then((res) => {
					if (res.isConfirmed) {
						try {
							axios
								.post(
									"/api/auth/users",
									{ signUpCredentials },
									{
										headers: {
											"Content-Type": "application/json",
										},
									}
								)
								.then(() =>
									Swal.fire({
										title: "Akun Dibuat",
										confirmButtonText: "OK",
										confirmButtonColor: "#60a5fa",
										icon: "success",
									}).then(() => router.push("/auth/signin"))
								)
								.catch((error) => {
									Swal.fire({
										title: "Gagal buat akun baru!",
										text: "Akun sudah ada",
										confirmButtonColor: "#60a5fa",
										icon: "error",
									});
								});
						} catch (error) {
							console.log(error);
						}
					}
				});
			}
		} catch (error) {
			console.log(error);
		}
	}
	async function handleShowPassword(state: boolean): Promise<void> {
		setPasswordState(state);
	}
	async function handleShowPasswordConfirm(state: boolean): Promise<void> {
		setPasswordConfirmState(state);
	}

	return (
		<>
			<Head>
				<title>GEMADISPOSISI - Sign Up</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="relative flex justify-center items-center w-full min-h-screen">
				<Image
					src="/bg-kantor.jpg"
					alt="bg-kantor"
					fill
					className="absolute z-0"
				/>
				<form
					onSubmit={handleSignUp}
					className="relative z-[1] flex flex-col gap-2 max-w-md w-5/6 p-12 rounded-3xl text-gray-200 bg-gradient-to-t from-gray-50/40 to-gray-50/0 backdrop-blur-md"
				>
					<div className="flex flex-col gap-2  w-fit mx-auto">
						<img
							src="https://lskgemapedekabe.com/wp-content/uploads/2019/08/pdkb-e1566140008599.png"
							alt="logo_gemapedekabe"
							className="w-40 bg-gray-50/50 rounded-full"
						/>
						<h2 className="text-center text-4xl font-bold">Sign Up</h2>
					</div>
					{/* USERNAME */}
					<div className="flex flex-col">
						<label>Username :</label>
						<input
							required
							type="text"
							placeholder=". . ."
							className="outline-none p-3 text-gray-800 bg-gray-200 rounded-md"
							onChange={(e) =>
								setSignUpCredentials({
									...signUpCredentials,
									email: e.target.value,
								})
							}
						/>
					</div>
					{/* PASSWORD */}
					<div className="flex flex-col">
						<label>Password :</label>
						<div className="flex gap-2 rounded-md bg-gray-200">
							<input
								required
								type={passwordState ? "text" : "password"}
								placeholder=". . ."
								className="w-full outline-none p-3 text-gray-800 bg-gray-200 rounded-md"
								onChange={(e) =>
									setSignUpCredentials({
										...signUpCredentials,
										password: e.target.value,
									})
								}
							/>
							{passwordState ? (
								<EyeSlashIcon
									className="mr-3 w-10 cursor-pointer text-gray-800"
									onClick={() => handleShowPassword(false)}
								/>
							) : (
								<EyeIcon
									className="mr-3 w-10 cursor-pointer text-gray-800"
									onClick={() => handleShowPassword(true)}
								/>
							)}
						</div>
					</div>
					{/* CONFIRM PASSWORD */}
					<div className="flex flex-col">
						<label>Confirm Password :</label>
						<div className="flex gap-2 rounded-md bg-gray-200">
							<input
								required
								type={passwordConfirmState ? "text" : "password"}
								placeholder=". . ."
								className="w-full outline-none p-3 text-gray-800 bg-gray-200 rounded-md"
								onChange={(e) => setPasswordConfirm(e.target.value)}
							/>
							{passwordConfirmState ? (
								<EyeSlashIcon
									className="mr-3 w-10 cursor-pointer text-gray-800"
									onClick={() => handleShowPasswordConfirm(false)}
								/>
							) : (
								<EyeIcon
									className="mr-3 w-10 cursor-pointer text-gray-800"
									onClick={() => handleShowPasswordConfirm(true)}
								/>
							)}
						</div>
					</div>
					{/* NAME */}
					<div className="flex flex-col">
						<label>Nama :</label>
						<input
							required
							type="text"
							placeholder=". . ."
							className="outline-none p-3 text-gray-800 bg-gray-200 rounded-md"
							onChange={(e) =>
								setSignUpCredentials({
									...signUpCredentials,
									name: e.target.value,
								})
							}
						/>
					</div>
					{/* POSISI */}
					<div className="flex flex-col">
						<label>Posisi :</label>
						<select
							required
							className="outline-none p-3 text-gray-800 bg-gray-200 rounded-md"
							onChange={(e) =>
								setSignUpCredentials({
									...signUpCredentials,
									position: e.target.value,
								})
							}
						>
							<option value="">--</option>
							<option value="DIREKSI">Direksi</option>
							<option value="MANAJEMEN_REPRESENTATIVE">
								Manajemen Representative
							</option>
							<option value="AUDITOR_INTERNAL">Auditor Internal</option>
							<option value="MANAJER_SERTIFIKASI">Manajer Sertifikasi</option>
							<option value="PENANGGUNGJAWAB_TEKNIK">
								Penanggung Jawab Teknik (PJT)
							</option>
							<option value="KOORDINATOR_PJT">Koordinator PJT</option>
							<option value="TENAGA_TEKNIK">Tenaga Teknik (TT/Asesor)</option>
							<option value="ADMINISTRATOR_UJI">Administrator Uji</option>
							<option value="STAFF_ADMINISTRASI">Staff Administrasi</option>
							<option value="STAFF_KEUANGAN">Staff Keuangan</option>
						</select>
					</div>
					{/* AKSES */}
					<div className="flex flex-col">
						<label>Akses :</label>
						<select
							className="outline-none p-3 text-gray-800 bg-gray-200 rounded-md"
							onChange={(e) =>
								setSignUpCredentials({
									...signUpCredentials,
									role: e.target.value,
								})
							}
						>
							<option value="USER">USER</option>
							<option value="SUPERUSER">SUPERUSER</option>
							<option value="ADMIN">ADMIN</option>
						</select>
					</div>
					{/* BUTTON */}
					<button
						type="submit"
						className="p-3 rounded-md font-semibold text-gray-200 bg-gray-800 transition-all duration-150 hover:bg-gray-900 hover:text-gray-400"
					>
						Sign Up
					</button>
					{/* <div className="text-sm text-center">
						<Link
							href={"/auth/signup"}
							className="font-semibold hover:font-bold hover:underline no-underline"
						>
							Sign Up
						</Link>{" "}
						untuk membuat akun pengguna baru
					</div> */}
				</form>
			</main>
		</>
	);
}
