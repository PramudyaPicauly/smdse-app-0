// NEXT REACT
import Head from "next/head";
import { useRouter } from "next/router";
// DEPENDENCY (PACKAGES, LIBS, INTERFACES, TYPES)
import { useSession } from "next-auth/react";
import axios from "axios";
import useSWR from "swr";
import { ArrowRightIcon, DocumentTextIcon } from "@heroicons/react/24/outline";
// COMPONENTS
import Layout from "@/components/Layout";
import Loading from "@/components/Loading";

const fetcher = async (url: string) =>
	await axios.get(url).then((res) => res.data);
const sentURL = "/api/documents/sent";
const receivedURL = "/api/documents/received";

export default function Dashboard() {
	// DEPENDENCIES FUNCTIONS
	const router = useRouter();
	const { data: session } = useSession();

	// FETCH DATA
	const {
		data: sentData,
		error: sentError,
		isLoading: sentIsLoading,
	} = useSWR(session ? sentURL : null, fetcher, {
		refreshInterval: 1000,
	});
	const {
		data: receivedData,
		error: receivedError,
		isLoading: receivedIsLoading,
	} = useSWR(session ? receivedURL : null, fetcher, {
		refreshInterval: 1000,
	});
	if (sentIsLoading || receivedIsLoading) {
		return <Loading />;
	}
	if (sentError) {
		alert(sentError);
	} else if (receivedError) {
		alert(receivedError);
	}

	const tabMenu = [
		session?.user.role !== "USER"
			? [
					{
						label: "Surat Terkirim",
						number: sentData?.length === 0 ? 0 : sentData?.length,
						url: "/dashboard/suratterkirim",
					},
			  ]
			: [],
		{
			label: "Surat Diterima",
			number: receivedData?.length === 0 ? 0 : receivedData?.length,
			url: "/dashboard/suratditerima",
		},
	].flat();

	return (
		<>
			<Head>
				<title>GEMADISPOSISI - Dashboard</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Layout>
				<h1 className="my-4 text-4xl font-semibold text-gray-800">Home</h1>
				<div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-white">
					{tabMenu?.map((data, index) => {
						return (
							<div
								key={index}
								onClick={() => {
									router.push(data.url);
								}}
								className="rounded-2xl bg-gray-500 transition-color duration-150 hover:bg-gray-800 group"
							>
								<div className="flex justify-between p-4 rounded-t-2xl bg-slate-800">
									<p>{data.label}</p>
									<div className="flex items-center gap-2 text-xs">
										<p className="hidden group-hover:inline">Lihat semua</p>
										<ArrowRightIcon className="w-4" />
									</div>
								</div>
								<div className="flex items-center justify-end p-6 text-6xl">
									<p>{data.number}</p>
									<DocumentTextIcon className="w-12" />
								</div>
							</div>
						);
					})}
				</div>
			</Layout>
		</>
	);
}
