// NEXT REACT
import Head from "next/head";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";
// DEPENDENCY (PACKAGES, LIBS, INTERFACES, TYPES)
import axios from "axios";
import useSWR from "swr";
import Swal from "sweetalert2";
import { EyeIcon, MinusCircleIcon } from "@heroicons/react/24/outline";
// COMPONENTS
import Layout from "@/components/Layout";
import { IDocumentData } from "@/interfaces/interfaces";
// FETCHER
const sentURL = "/api/documents/sent";
const fetcher = async (url: string) =>
	await axios.get(url).then((res) => res.data);

export default function SuratTerkirim() {
	// DEPENDENCIES FUNCTIONS
	const router = useRouter();
	const { data: session } = useSession();
	// FETCH DATA
	const {
		data,
		error,
		isLoading,
	}: { data: IDocumentData[]; error: any; isLoading: boolean } = useSWR(
		session ? sentURL : null,
		fetcher,
		{
			refreshInterval: 1000,
		}
	);
	if (isLoading) return null;
	if (error) alert(error);
	// FUNCTIONS
	async function handleUnsent(id: string) {
		try {
			await Swal.fire({
				title: "Tarik Surat?",
				text: "Surat akan ditarik dari semua penerima!",
				icon: "warning",
				showCancelButton: true,
				confirmButtonColor: "#60a5fa",
				cancelButtonColor: "#f87171",
				confirmButtonText: "Ya",
				cancelButtonText: "Batal",
				color: "#111827",
			}).then((res) => {
				if (res.isConfirmed) {
					axios.delete(`/api/documents/sent/${id}`, {
						headers: { "Content-Type": "application/json" },
						data: { documentId: id },
					});
					Swal.fire({
						title: "Surat Ditarik!",
						icon: "success",
						confirmButtonColor: "#60a5fa",
					});
				} else {
					Swal.fire({
						title: "Surat Batal Ditarik!",
						icon: "error",
						confirmButtonColor: "#60a5fa",
					});
				}
			});
		} catch (error) {
			console.error(error);
		}
	}

	return (
		<>
			<Head>
				<title>GEMADISPOSISI - Surat Terkirim</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Layout>
				<h1 className="my-4 text-4xl font-semibold text-gray-800">
					Surat Terkirim
				</h1>
				<div className="overflow-hidden rounded-lg">
					<table className="w-full border-collapse bg-gray-600 text-left text-sm text-white">
						<thead className="bg-gray-800">
							<tr>
								<th scope="col" className="px-6 py-4 font-medium">
									Surat
								</th>
								<th scope="col" className="px-6 py-4 font-medium">
									Judul/Nomor
								</th>
								<th
									scope="col"
									className="px-6 py-4 font-medium dden md:table-cell"
								>
									Tanggal
								</th>
								<th
									scope="col"
									className="px-6 py-4 font-medium hidden md:table-cell"
								>
									Perihal
								</th>
								<th scope="col" className="px-6 py-4 font-medium">
									Aksi
								</th>
							</tr>
						</thead>
						<tbody className="divide-y divide-gray-700">
							{data?.length === 0 ? (
								<>
									<tr>
										<td colSpan={5} className="px-6 py-4 text-center">
											<p>Belum ada surat terkirim.</p>
										</td>
									</tr>
								</>
							) : (
								data?.map((data: any, index: any) => {
									return (
										<tr className="hover:bg-gray-700" key={index}>
											<td className="px-6 py-4">{data.type}</td>
											<td className="px-6 py-4">{data.content.nomor}</td>
											<td className="px-6 py-4 hidden md:table-cell">
												{data.content.tanggal}
											</td>
											<td className="px-6 py-4 hidden md:table-cell">
												{data.content.perihal}
											</td>
											<td className="flex gap-2 px-6 py-4">
												<div
													onClick={() =>
														router.push({
															pathname: "/surat/disposisi/view/[id]",
															query: { id: data.id },
														})
													}
													className="flex items-center gap-1 w-fit px-2 py-1 rounded-md bg-amber-400 text-slate-800 transition-colors duration-200 hover:text-white hover:bg-amber-600 cursor-pointer"
												>
													<EyeIcon className="w-5" />
													<p>Lihat</p>
												</div>
												<div
													onClick={() => handleUnsent(data.id)}
													className="flex items-center gap-1 w-fit px-2 py-1 rounded-md bg-red-400 text-slate-800 transition-colors duration-200 hover:text-white hover:bg-red-600 cursor-pointer"
												>
													<MinusCircleIcon className="w-5" />
													<p>Tarik</p>
												</div>
											</td>
										</tr>
									);
								})
							)}
						</tbody>
					</table>
				</div>
			</Layout>
		</>
	);
}
